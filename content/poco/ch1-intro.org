#+title: 介绍

- 冯诺依曼架构
- 存储程序（stored-program）
- 计算机的五大部分

-----

“组成”：organization，偏硬件。

主要内容：
1. 组成计算机的各个部件的原理
2. 部件间怎么借助通路，在控制器的作用下协同工作

ENIAC: 第一台 *通用* 计算机
John Mauchly & John Presper Eckert Jr.

von Neumann proposes the concept of "stored-program computer" -> EDVAC

EDSAC: first von Neumann architecture computer

#+DOWNLOADED: screenshot @ 2021-08-24 11:40:11
[[file:../../../../02.Notes/imgs/von_Neumann_结构/2021-08-24_11-40-11_screenshot.png]]

* von Neumann 结构

- 两个重要思想
  - *存储程序* ：程序应该存放在存储器中，而非使用开关连线，否则会大大
    降低运行效率
  - 采用二进制表示数据和指令，指令与数据均以二进制代码的形式存于存储器
    中。两者在存储器中的地位相同,均可按地址访问。

  数据和程序均以二进制形式 *不加区别地* 放在存储器中，存放位置由地址指
  定。指令由操作码和地址码两部分组成。操作码表示指令的操作性质,地址码
  表示操作数在存储器中的位置。

- 明确了计算机的五大部分
  - 控制器 central control (CC)
  - 运算器 central arithmetical (CA)
  - 存储器 memory (M)
  - 输入设备 input (I)
  - 输出设备 output (O)
  - +还有外部记录介质 outside recording medium (R)+

CPU = 控制器 + 运算器

早期计算机以 *运算器* 为中心，现代计算机以 *存储器* 为中心。

现代计算机：
#+DOWNLOADED: screenshot @ 2021-08-24 11:52:12
[[file:../../../../02.Notes/imgs/von_Neumann_结构/2021-08-24_11-52-12_screenshot.png]]

第一个商业处理器：Intel 4004，最初用于计算器
#+DOWNLOADED: screenshot @ 2021-08-24 11:47:30
[[file:../../../../02.Notes/imgs/von_Neumann_结构/2021-08-24_11-47-30_screenshot.png]]


#+DOWNLOADED: screenshot @ 2021-08-24 11:48:54
[[file:../../../../02.Notes/imgs/von_Neumann_结构/2021-08-24_11-48-54_screenshot.png]]

#+DOWNLOADED: screenshot @ 2021-08-24 11:56:43
[[file:../../../../02.Notes/imgs/von_Neumann_结构/2021-08-24_11-56-43_screenshot.png]]


CPU loop:
1. fetch
2. decode
3. execute
4. write-back

-----

* 计算机结构的简化模型（模型机）

- CPU
  - ALU
  - General Purpose Register
  - Specific Register
  - MAR & MDR
  - 内部总线
- Memory

* 计算机硬件系统

完整的计算机系统由 _/硬件系统/ 和 *软件系统*_ 组成。

判断：完整的计算机系统包括运算器、控制器、存储器和IO设备。
（$\color{red}{错，还有{\bf 软件系统}}$）

** 计算机的五大部件
*** 输入设备
外界 $\to$ 计算机
*** 输出设备
计算机 $\to$ 外界
*** 存储器
- 主存储器：CPU能直接访问
- 辅助存储器：容量大、速度慢，读入主存后CPU才能访问

存储器的访问方式
- 按地址
- 按内容：相联存储器（？）主要在cache中

  已知内容0100，在cache中查找其地址

主存的基本组成
- 存储体：存放二进制内容的主体
- 地址寄存器（Memory Address Register）：放置需要写入/读取的地址
- 数据寄存器（Memory Data Register）：放置需写入/读取的信息
- 控制逻辑：产生控制所需的时序信号（内存频率）

*** 运算器

运算器核心为ALU，包含若干寄存器，用于暂存操作数和中间结果。

*** 控制器（CU）

*存储程序方式* (stored-program)：程序放在存储器中，控制器依次读取存储器
中的程序实施控制。

-----

软件系统分为系统软件和应用软件。

* 计算机系统的组织结构

本质上，计算机硬件和软件都可以相互实现（即 *在逻辑功能上等效* ），但
- 软件实现灵活，但慢
- 硬件实现快，但不灵活且贵


例如：软件模拟的浮点数计算 vs 带有硬件加速的浮点数计算

# - 硬件的软化：用软件代替硬件功能
# - 软件的硬化：用硬件代替软件功能
# - 固件：如BIOS，网卡固件等

** 计算机系统的多级层次结构

#+DOWNLOADED: screenshot @ 2021-08-26 16:33:50
[[file:../../../../02.Notes/imgs/计算机系统的组织结构/2021-08-26_16-33-50_screenshot.png]]

* 总线

输入输出设备 *不直接* 连到总线上

系统总线：
- 数据总线
- 地址总线
- 控制总线


总线的原则
- 分时使用：每个部件必须分时使用总线发送信息，即每个时刻最多只有一个部
  件在发送（但可以有多个接收）。

总线的分类
- 按任务
  - CPU内部总线
  - 部件内部总线
  - 系统总线：连接系统内各大部件，包括地址、数据、控制（、状态）总线，
    还有PIC、PIC-E总线等。
  - 外总线：与外界的通信总线，如并口、串口等
- 按信息传送方向
  - 单项总线：如地址总线
  - 双向总线：如数据总线
- 按传送的位数分
  - 并行：IDE。若频率过高，并行数据会相互干扰。
  - 串行：USB，SATA，频率更高，因此速度更快

总线的好处：减少内部连线数，简化硬件结构，便于修改和扩充系统。

总线的连接方式
- 单总线结构：一根总线连接所有，速度过低
- 双总线：面向存储器/CPU的双总线
- 三总线


* 计算机的性能指标
- 基本字长
- 主存容量
  - =b=: bit
  - =B=: byte 
  - =K=:
    ...
    TODO

- 运算速度的计算
