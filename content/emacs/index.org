#+title: Fun with Emacs

* 中文断行
  启用 auto-fill 模式后，中文断行在导出时会出现空格，就先直接抄人家的
  代码啦：[[https://github.com/hick/emacs-chinese#%E4%B8%AD%E6%96%87%E6%96%AD%E8%A1%8C][Emacs相关中文问题以及解决方案]]。

  一开始用的 Feng Shu 的版本，但发现中文和代码块之间空格会消失，于是就
  换成 zwz 实现了。

  #+BEGIN_SRC elisp
    ;;; 下面一段是 zwz 的, 作者声明只适应 org-mode 8.0 以及以上版本
    (defun clear-single-linebreak-in-cjk-string (string)
      "clear single line-break between cjk characters that is usually soft line-breaks"
      (let* ((regexp "\\([\u4E00-\u9FA5]\\)\n\\([\u4E00-\u9FA5]\\)")
             (start (string-match regexp string)))
        (while start
          (setq string (replace-match "\\1\\2" nil nil string)
                start (string-match regexp string start))))
      string)

    (defun ox-html-clear-single-linebreak-for-cjk (string backend info)
      (when (org-export-derived-backend-p backend 'html)
        (clear-single-linebreak-in-cjk-string string)))

    (add-to-list 'org-export-filter-final-output-functions
                 'ox-html-clear-single-linebreak-for-cjk)
  #+END_SRC

* 关于 Code Block 的一些小技巧 - [[https://orgmode.org/guide/Working-with-Source-Code.html][Working with Source Code]]
  Use =C-c '= to edit the current code block. It opens a new major
  mode edit buffer containing the body of the source code block, ready
  for any edits. Use =C-c '= again to close the buffer and return to
  the Org buffer (this saves editing results); or use =C-c C-k= to
  abort editing and discard results.

* 各种文件操作
** Concat file name without =concat=
   [[https://www.reddit.com/r/emacs/comments/umb24/expandfilename_is_good_for_path_concat_too/][=expand-file-name= is good for path concat too]]

   When joining file paths, use =expand-file-name= instead of concat.

   #+BEGIN_SRC elisp :exports both
     (expand-file-name "eserver" "/home/user/")
   #+END_SRC

   评论区还有更棒的 trick 😁：
   #+BEGIN_SRC elisp :exports both
     (require 'cl-lib)
     (defun concat-path (&rest parts)
       (cl-reduce (lambda (a b)
                    (expand-file-name b a))
                  parts))
     (concat-path "/home/user" "eserver" "blog")
   #+END_SRC

   不过 =expand-file-name= 只适合绝对路径，在 [[https://stackoverflow.com/questions/3964715/what-is-the-correct-way-to-join-multiple-path-components-into-a-single-complete][What is the correct way
   to join multiple path components into a single complete path in
   emacs lisp?]] 里有关于 =concat=, =expand-file-name=, 还有 =f.el= 里
   =f-join= 的讨论（懒得看了😜
** Check for file existence
   [[https://emacs.stackexchange.com/questions/34392/how-to-check-if-a-directory-exists-in-elisp][How to check if a directory exists in elisp?]]

   - =file-exists-p FILENAME= :: Return =t= if file =FILENAME= exists
     (whether or not you can read it).
   - =file-directory-p FILENAME= :: Return =t= if =FILENAME= names an
     *existing* directory.


   #+BEGIN_SRC elisp
     (defun directory-non-hidden-files (directory)
       "Return absolute path of all non-hidden & non-backup files in DIRECTORY.
     This does not opreate recursively. Only files / directories under the current
     directory is shown."
       ;; 如过再对结果都来个 file-direcotry-p 就可以返回文件夹啦
       (directory-files directory t
                        ;; dircard ".", "..", hidden, and emacs-backup files
                        (rx string-start (not ?.) (* anything) (not ?~) string-end)))
   #+END_SRC
