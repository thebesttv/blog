#+title: 准备活动

按照 [[http://cs107e.github.io/guides/install/wsl/][Guide: Install on Windows WSL]] 把环境配好，再在 [[http://cs107e.github.io/guides/install/][Guide: Installing
the developer tools]] 里过一下 Final check steps 就可以了。

我的是 FT232 的 USB2TTY 转接器，vendor ID 和 product ID 与课程中的不同
#+begin_src bash
  $ lsusb
  Bus 001 Device 008: ID 0403:6001 Future Technology Devices International, Ltd FT232 Serial (UART) IC
#+end_src

因此要修改 =rpi-run.py= 中的 =SERIAL_VID= 和 =SERIAL_PID=
#+begin_src python
  # FT232
  SERIAL_VID = "0403"
  SERIAL_PID = "6001"
#+end_src

在跑 =rpi-run.py= 的时候有错误
#+begin_src text
Cannot open /dev/ttyUSB0: Permission denied
#+end_src
根据​[[https://github.com/esp8266/source-code-examples/issues/26][这个 Github issue]]​，要将当前用户添加到 =tty= 和 =dialout= 用户组。
#+begin_src bash
  sudo usermod -a -G tty thebesttv
  sudo usermod -a -G dialout thebesttv
#+end_src

然后就是测试啦！按照[[http://cs107e.github.io/guides/sd/][Guide: Working with SD Cards]]，进入
=$CS107E/firmware=​，先把 =bootcode.bin= 和 =start.elf= 放入SD卡。再将
=blink-actled.bin= 放入，改名为 =kernel.img=​，通电后如果ACT灯每隔一秒
左右闪动则正常。最后把 =bootloader.bin= 作为新的 =kernel.img= 就行啦。

#+begin_details 树莓派启动顺序
好像通电后刚开始是跑在GPU上的？超级神奇～

大概就是，在一开始的 GPU Boot 阶段，先跑 =bootcode.bin= 和 =start.elf=
两个文件，然后再运行 =kernel.img= 。

详细的启动顺序可见 [[https://raspberrypi.stackexchange.com/a/10595][The boot sequence of the Raspberry Pi]]。
#+end_details

接下来用FT232连接树莓派
{{{image(100)}}}
[[./ch0-preparation/gpio.png]]

先连四根线
- =VCCIO= 连4号 =5V power=
- =GND= 连6号 =Ground=
- =RXD= 连8号 =GPIO 14 TXD=
- =TXD= 连10号 =GPIO 15 RXD=
注意这里转接器的 =RXD= 连树莓派的 =TXD=​，转接器的 =TXD= 连树莓派的 =RXD=​。

{{{image(70)}}}
[[./ch0-preparation/connection.jpg]]

再照着 [[http://cs107e.github.io/guides/reset-button/][Guide: Reset your Pi without Unplugging]] 把 reset 焊上，不过我的
转接器上没有 =DTR= 但有 =RTS=​，所以就把 =rpi-run.py= 又改了一下，把
=port.dtr= 改成 =port.rts= 即可
#+begin_src python
  # Opening the port seems to always pull DTR low, so go ahead
  # and perform complete reset sequence no matter what. If DTR
  # unconnected, behaves as no-op.
  printv("Toggling DTR pin to reset Pi: low... ", end='')
  # port.dtr = True  # Pull DTR pin low.
  port.rts = True
  time.sleep(0.2)  # Wait for Pi to reset.
  printv("high. Waiting for Pi to boot... ", end='')
  # port.dtr = False  # Pull DTR pin high.
  port.rts = False
  time.sleep(1)     # Wait for Pi to boot.
  printv("Done.")
#+end_src

最后再照着 [[http://cs107e.github.io/guides/bootloader/][Guide: Using the Bootloader]] 就行啦～
